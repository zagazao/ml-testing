version: "3.2"
services:

  mongo:
    container_name: mongo
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "secret_mongo_user"
      MONGO_INITDB_ROOT_PASSWORD: "secret_mongo_password"
    ports:
      - "27017:27017"
    networks:
      - mainnet

  minio-s3:
    container_name: minio
    image: minio/minio
    restart: always
#     volumes:
#       - /home/lukas/data/minio/:/data
    environment:
      - MINIO_ROOT_USER=storage_user
      - MINIO_ROOT_PASSWORD=crazy_storage_password
    ports:
      - 9000:9000
      - 9001:9001
    command: server /data --console-address ":9001"
    user: "${UID}:${GID}"
    networks:
      - mainnet

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - mainnet

  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    networks:
      - mainnet


  createbuckets:
    image: minio/mc
    depends_on:
      - minio-s3
    environment:
      - MINIO_ROOT_USER=storage_user
      - MINIO_ROOT_PASSWORD=crazy_storage_password
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set myminio http://minio-s3:9000 storage_user crazy_storage_password;
      /usr/bin/mc ls myminio | grep jobs || /usr/bin/mc mb myminio/jobs;
      /usr/bin/mc policy set public myminio/jobs;
      exit 0;
      "
    networks:
      - mainnet

  celery-worker:
    user: 1000:1000
    depends_on:
      - rabbitmq
      - redis
    build:
      context: .
      dockerfile: docker/celery/Dockerfile
    image: heppe/celery-worker:latest
#     command: -Q initial_task
    env_file:
      - dev.env
    environment:
      - CELERY_BROKER=pyamqp://guest@rabbitmq//
      - CELERY_BACKEND=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MONGO_DB_HOST=mongo
    volumes:
      - /tmp/mlrun-data/:/src/
    networks:
      - mainnet

  flower:
    image: mher/flower
    ports:
      - 5555:5555
    environment:
      - CELERY_BROKER_URL=pyamqp://guest@rabbitmq//
      - CELERY_BACKEND_URL=redis://redis
    networks:
      - mainnet
    depends_on:
      - celery-worker
      - redis

networks:
  mainnet:
    driver: bridge
